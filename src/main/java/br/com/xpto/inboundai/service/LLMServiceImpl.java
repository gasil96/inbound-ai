package br.com.xpto.inboundai.service;import br.com.xpto.inboundai.client.OpenAiClient;import br.com.xpto.inboundai.client.OpenRouterClient;import br.com.xpto.inboundai.client.model.OpenAiRequest;import br.com.xpto.inboundai.client.model.OpenAiResponse;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.stereotype.Service;import java.util.List;@Slf4j@Service@RequiredArgsConstructorpublic class LLMServiceImpl implements LLMService {	private final OpenAiClient openAiClient;	private final OpenRouterClient openRouterClient;	@Override	public String openAiChat(String inputText) {		OpenAiRequest request = new OpenAiRequest(				"gpt-3.5-turbo",				List.of(						new OpenAiRequest.Message("user", inputText)				)		);		OpenAiResponse response = openAiClient.chat(request);		return response.getChoices().get(0).getMessage().getContent();	}	@Override	public String openRouterChat(String inputText) {		OpenAiRequest request = new OpenAiRequest(				"gpt-3.5-turbo",				List.of(						new OpenAiRequest.Message("user", inputText)				)		);		OpenAiResponse response = openRouterClient.chat(request);		return response.getChoices().get(0).getMessage().getContent();	}}