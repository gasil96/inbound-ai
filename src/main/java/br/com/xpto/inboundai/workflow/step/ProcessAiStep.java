package br.com.xpto.inboundai.workflow.step;import br.com.xpto.inboundai.handler.exception.BusinessException;import br.com.xpto.inboundai.model.MessageBody;import br.com.xpto.inboundai.service.LLMService;import br.com.xpto.inboundai.workflow.context.GlobalContext;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.core.annotation.Order;import org.springframework.stereotype.Component;import static br.com.xpto.inboundai.model.Constants.CHAT_RESPONSE;import static br.com.xpto.inboundai.model.Constants.RECEIVER_MESSAGE;@Slf4j@RequiredArgsConstructor@Component@Order(2)public class ProcessAiStep implements WorkflowStep {	private final LLMService llmService;	@Override	public void execute(GlobalContext context) {		log.info("ProcessAiStep started");		var messageBody = context.get(RECEIVER_MESSAGE, MessageBody.class);		try {			var response = llmService.openRouterChat(messageBody.getContent());			context.put(CHAT_RESPONSE, response);		} catch (Exception e) {			throw new BusinessException("Error processing message AI: " + e.getMessage());		}	}}