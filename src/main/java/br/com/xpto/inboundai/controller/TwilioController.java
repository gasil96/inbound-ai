package br.com.xpto.inboundai.controller;import br.com.xpto.inboundai.handler.exception.BusinessException;import br.com.xpto.inboundai.model.MessageBody;import br.com.xpto.inboundai.workflow.InboundWorkflow;import br.com.xpto.inboundai.workflow.context.GlobalContext;import io.swagger.v3.oas.annotations.Operation;import io.swagger.v3.oas.annotations.tags.Tag;import lombok.RequiredArgsConstructor;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;import static br.com.xpto.inboundai.model.Constants.RECEIVER_MESSAGE;@RestController@RequestMapping("/api/v1/messages")@RequiredArgsConstructor@Tag(name = "Message WhatsApp Controller", description = "Controller for sending messages by Twilio")public class TwilioController {	private final InboundWorkflow workflow;	@PostMapping("/receiver")	@Operation(summary = "Receive a message", description = "Webhook to receive incoming messages from Twilio")	public ResponseEntity<Void> receiveMessage(			@RequestParam("From") String from,			@RequestParam("Body") String body) {		try {			var inbound = MessageBody.builder()					.from(from)					.content(body)					.build();			GlobalContext context = new GlobalContext();			context.put(RECEIVER_MESSAGE, inbound);			workflow.start(context);		} catch (Exception e) {			throw new BusinessException("Error receiving message by: " + e.getMessage());		}		return ResponseEntity.ok().build();	}}