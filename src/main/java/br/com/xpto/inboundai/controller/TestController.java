package br.com.xpto.inboundai.controller;import br.com.xpto.inboundai.model.Lead;import br.com.xpto.inboundai.model.Main;import br.com.xpto.inboundai.service.CamundaService;import br.com.xpto.inboundai.service.LeadService;import io.swagger.v3.oas.annotations.tags.Tag;import lombok.RequiredArgsConstructor;import org.springframework.http.ResponseEntity;import org.springframework.validation.annotation.Validated;import org.springframework.web.bind.annotation.*;import java.util.Optional;@RestController@RequestMapping("/api/v1/test")@RequiredArgsConstructor@Tag(name = "Tests", description = "NO COMMIT")public class TestController {	private final LeadService leadService;	private final CamundaService camundaService;	@PostMapping("/start")	public void startConversation(@RequestBody Main main) {		camundaService.startMainWorkflow(null, main);	}	@PostMapping("/create")	public ResponseEntity<Void> createLead(@RequestBody @Validated Lead lead) {		leadService.create(lead);		return ResponseEntity.ok().build();	}	@PutMapping("/update")	public ResponseEntity<Void> updateLead(@RequestBody Lead lead) {		leadService.update(lead);		return ResponseEntity.ok().build();	}	@DeleteMapping("/delete")	public ResponseEntity<Void> deleteLead(@RequestParam String id) {		leadService.deleteById(id);		return ResponseEntity.ok().build();	}	@GetMapping("/get")	public ResponseEntity<Optional<Lead>> getLead(@RequestParam String id) {		return ResponseEntity.ok(leadService.getLeadById(id));	}	@GetMapping("/getAll")	public ResponseEntity<Iterable<Lead>> getAllLeads() {		return ResponseEntity.ok(leadService.getAll());	}}